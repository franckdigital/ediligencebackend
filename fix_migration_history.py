#!/usr/bin/env python
"""
Script pour r√©soudre le probl√®me d'historique de migration incoh√©rent.
Migration core.0030 appliqu√©e avant core.0029.
"""

import os
import django
import sys

# Configuration Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ediligence.settings')
django.setup()

from django.db import connection

def fix_migration_history():
    """Corrige l'historique des migrations en supprimant et r√©appliquant les migrations probl√©matiques."""
    
    print("üîß Correction de l'historique des migrations...")
    
    with connection.cursor() as cursor:
        # V√©rifier les migrations actuelles
        cursor.execute("""
            SELECT id, app, name, applied 
            FROM django_migrations 
            WHERE app = 'core' AND name IN ('0029_geofencesettings_pushnotificationtoken_geofencealert_and_more', '0030_alter_pushnotificationtoken_token')
            ORDER BY applied DESC
        """)
        
        migrations = cursor.fetchall()
        print(f"\nüìã Migrations trouv√©es : {len(migrations)}")
        for mig in migrations:
            print(f"   - ID: {mig[0]}, App: {mig[1]}, Name: {mig[2]}, Applied: {mig[3]}")
        
        if len(migrations) == 0:
            print("\n‚úÖ Aucune migration probl√©matique trouv√©e.")
            return
        
        # Supprimer la migration 0030 de l'historique
        print("\nüóëÔ∏è  Suppression de la migration 0030 de l'historique...")
        cursor.execute("""
            DELETE FROM django_migrations 
            WHERE app = 'core' AND name = '0030_alter_pushnotificationtoken_token'
        """)
        deleted_count = cursor.rowcount
        print(f"   ‚úÖ {deleted_count} enregistrement(s) supprim√©(s)")
        
        # V√©rifier si 0029 existe
        cursor.execute("""
            SELECT COUNT(*) 
            FROM django_migrations 
            WHERE app = 'core' AND name = '0029_geofencesettings_pushnotificationtoken_geofencealert_and_more'
        """)
        count_0029 = cursor.fetchone()[0]
        
        if count_0029 == 0:
            print("\n‚ö†Ô∏è  La migration 0029 n'est pas dans l'historique.")
            print("   Vous devrez ex√©cuter : python manage.py migrate core 0029")
        else:
            print("\n‚úÖ La migration 0029 est pr√©sente dans l'historique.")
        
        print("\n‚úÖ Correction termin√©e !")
        print("\nüìù Prochaines √©tapes :")
        print("   1. python manage.py makemigrations")
        print("   2. python manage.py migrate")

if __name__ == '__main__':
    try:
        fix_migration_history()
    except Exception as e:
        print(f"\n‚ùå Erreur : {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
